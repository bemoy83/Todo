/* styles.css - Enhanced with more CSS custom properties */

:root {
  /* Colors */
  --bg: #f1f3f5;
  --card: #ffffff;
  --text: #212529;
  --muted: #6c757d;
  --border: #e9ecef;
  --green: #2f9e44;
  --red: #e03131;
  --amber: #f59f00;
  
  /* Spacing Scale */
  --space-xs: 4px;
  --space-sm: 8px;
  --space-md: 12px;
  --space-lg: 16px;
  --space-xl: 24px;
  --space-xxl: 32px;
  
  /* Border Radius Scale */
  --radius-xs: 6px;
  --radius-sm: 10px;
  --radius: 12px;
  --radius-lg: 14px;
  --radius-full: 999px;
  
  /* Size Scale */
  --size-xs: 32px;
  --size-sm: 40px;
  --size-md: 44px;
  --size-lg: 56px;
  --size-xl: 60px;
  
  /* Layout */
  --topbar-h: var(--size-lg);
  --app-max-width: 680px;
  --card-min-height: var(--size-xl);
  --subtask-min-height: var(--size-lg);
  
  /* Shadows */
  --shadow: 0 4px 10px rgba(0,0,0,.08);
  --shadow-strong: 0 10px 24px rgba(0,0,0,.14);
  --focus: 0 0 0 2px #00000010, 0 0 0 4px #74c0fc80;
  
  /* Timing */
  --timing-fast: 140ms;
  --timing-normal: 200ms;
  --timing-slow: 300ms;
  --easing: ease-out;
  
  /* Z-index scale */
  --z-base: 0;
  --z-dropdown: 1000;
  --z-sticky: 1100;
  --z-modal: 1200;
}

/* Method 2: CSS content (better for consistency) */
.action {
  font-family: inherit; /* Use same font as body */
  font-weight: 600;
}

/* Complete/Check icons */
.action.complete::before {
  content: "‚úì";
  /* Alternative options: */
  /* content: "‚úÖ"; Checkmark emoji */
  /* content: "‚úîÔ∏è"; Heavy checkmark */
  /* content: "‚úì"; Simple checkmark */
  /* content: "‚òëÔ∏è"; Ballot box with check */
}

/* Edit icons */
.action.edit::before {
  content: "‚úé";
  /* Alternative options: */
  /* content: "‚úé"; Pencil */
  /* content: "üìù"; Memo */
  /* content: "‚úÇÔ∏è"; Scissors (for editing) */
  /* content: "‚öôÔ∏è"; Gear (for settings/edit) */
  /* content: "‚úèÔ∏è"; */
}

/* Delete icons */
.action.delete::before {
  content: "‚å´";
  /* Alternative options: */
  /* content: "üóëÔ∏è"; Trash can */
  /* content: "‚ùå"; Cross mark */
  /* content: "üöÆ"; Litter in bin */
  /* content: "‚å´"; Delete key */
  /* content: "‚úñÔ∏è"; Heavy multiplication X */
  /* content: "√ó"; */
}

/* Add task button */
.add-btn::before,
.add-sub-btn::before {
  content: "+";
  /* Alternative options: */
  /* content: "‚ûï"; Plus emoji */
  /* content: "‚úö"; Heavy plus */
  /* content: "‚äï"; Circled plus */
  /* content: "+"; */
}

/* Menu button */
.menu-btn::before {
  content: "‚ò∞";
  /* Alternative options: */
  /* content: "‚ãÆ"; Vertical ellipsis */
  /* content: "‚öôÔ∏è"; Gear */
  /* content: "üìã"; Clipboard (menu) */
}

/* Handle icons (drag handles) */
.card-handle::before,
.sub-handle::before {
  content: "‚ãÆ‚ãÆ";
  /* Alternative options: */
  /* content: "‚â°"; Triple bar */
  /* content: "‚†ø"; Braille (dots) */
  /* content: "‚ãØ"; Horizontal ellipsis */
  /* content: "‚ñ¶"; Square with fill */
}

/* Badge styling for task count */
.badge {
  font-variant-numeric: tabular-nums; /* Better number alignment */
}

/* Icon sizing and alignment */
.action::before,
.add-btn::before,
.add-sub-btn::before,
.menu-btn::before {
  display: inline-block;
  font-style: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
}

.action.delete::before,
.add-btn::before,
.action.edit::before,
.action.complete::before,
.menu-btn::before {
 font-size: 18px;
 font-weight: 300;
}

/* Hover effects for better UX */
.action:hover::before {
  transform: scale(1.1);
  transition: transform 150ms ease;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .action::before,
  .add-btn::before,
  .menu-btn::before {
    font-weight: 900;
  }
}
/* Basic reset and body styles */
* {
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  user-select: none;
}

/* Improve input text rendering */
input, textarea {
  font-family: inherit; /* Use same font as body */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  margin: 0;
  /* Improved system font stack (all built-in): */
  font-family: 
    system-ui,
    -apple-system, 
    BlinkMacSystemFont,
    "Segoe UI",
    "Roboto",
    "Oxygen",
    "Ubuntu",
    "Cantarell",
    "Helvetica Neue",
    Arial,
    sans-serif;
  
  /* Add these for better text rendering: */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  
  background: var(--bg); 
  color: var(--text);
  
  /* Slightly improve base typography: */
  font-size: 16px;
  line-height: 1.3;
  font-weight: 400;
}

.topbar-title, 
.task-title { 
  font-weight: 700; /* Instead of 800, more readable */
  font-size: 17px;  /* Slightly smaller than 18px */
  line-height: 1.3; /* Tighter line height for titles */
  letter-spacing: -0.01em; /* Subtle letter spacing */
}

.task-title { 
  flex: 1; 
}

/* Platform-specific optimizations */
/* Better text on iOS */
@supports (-webkit-touch-callout: none) {
  body {
    font-family: -apple-system, BlinkMacSystemFont, system-ui, sans-serif;
  }
}

/* Better button text */
button {
  font-family: inherit;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Layout Styles - Now using variables */
.app { 
  max-width: var(--app-max-width); 
  margin: 0 auto; 
  padding: calc(var(--topbar-h) + var(--space-xl)) var(--space-lg) 140px; 
  display: flex; 
  flex-direction: column; 
  gap: var(--space-lg); 
  position: relative; 
}

.topbar { 
  position: sticky; 
  top: 0; 
  z-index: var(--z-sticky); 
  display: flex; 
  align-items: center; 
  gap: var(--space-md); 
  height: var(--topbar-h); 
  padding: max(var(--space-sm), env(safe-area-inset-top)) var(--space-md) var(--space-sm); 
  background: rgba(255,255,255,.92); 
  backdrop-filter: saturate(180%) blur(10px); 
  border-bottom: 1px solid var(--border); 
}

/* Task Card Styles - Using size variables */
.task-card { 
  background: var(--card); 
  border: 1px solid var(--border); 
  border-radius: var(--radius); 
  box-shadow: var(--shadow); 
  overflow: hidden; 
  transition: transform var(--timing-fast) var(--easing), box-shadow var(--timing-fast) var(--easing); 
  will-change: transform; 
}

.card-row { 
  display: flex; 
  gap: var(--space-md); 
  align-items: center; 
  padding: var(--space-lg); 
  min-height: var(--card-min-height); 
  touch-action: pan-y; 
}

.badge { 
  font-weight: 600; /* Medium weight, not too heavy */
  font-size: 13px;
  letter-spacing: 0.02em; /* Slight spacing for small text */ 
  color: white; 
  background: var(--red); 
  border: 1px solid var(--border); 
  min-width: var(--space-xl); 
  text-align: center; 
  padding: var(--space-sm) var(--space-md); 
  border-radius: var(--radius-full); 
}

/* Handle Styles - Using consistent sizing */
.card-handle,
.sub-handle { 
  flex: 0 0 auto; 
  display: flex; 
  align-items: center; 
  justify-content: center; 
  min-width: var(--space-xl); 
  min-height: var(--size-md);
  border-radius: var(--radius); 
  border: 0px solid var(--border); 
  background: none; 
  color: var(--muted); 
  font-weight: 800; 
  cursor: grab; 
  touch-action: none; 
  -webkit-user-drag: none; 
}

.card-handle:active,
.sub-handle:active { 
  cursor: grabbing; 
}

/* Subtask Styles - Using spacing variables */
.subtask-list { 
  display: flex; 
  flex-direction: column; 
  gap: var(--space-sm); 
  padding: var(--space-sm) var(--space-lg) var(--space-sm); 
  background: #f8f9fa; 
  border-top: 1px dashed var(--border); 
}

.subtask {
  display: flex; 
  gap: var(--space-md); 
  align-items: center;
  background: var(--card); 
  border: none; 
  border-radius: var(--radius);
  min-height: var(--subtask-min-height); 
  padding: var(--space-sm) var(--space-md);
  box-shadow: var(--shadow);
  touch-action: pan-y;
  position: relative; 
  will-change: transform;
}


.sub-text {
  font-size: 15px; /* Slightly smaller than body */
  line-height: 1.4;
  flex: 1; 
}

.sub-text.done { 
  text-decoration: line-through; 
  color: var(--muted); 
}

/* Tasks armed state */
.task-card.armed,
.subtask.armed { 
  transform: scale(1.01); 
  box-shadow: var(--shadow-strong); 
  z-index: 2; 
}

/* Smooth state transitions */
.task-card,
.subtask {
  transition: opacity var(--timing-normal) ease, transform var(--timing-normal) ease;
}

/* Form Styles - Using size variables */
.add-bar {
  position: fixed; 
  left: 0; 
  right: 0; 
  bottom: 0; 
  z-index: var(--z-dropdown);
  background: rgba(255,255,255,.92); 
  backdrop-filter: saturate(180%) blur(10px);
  border-top: 1px solid var(--border);
  padding: var(--space-md) var(--space-lg) calc(var(--space-md) + env(safe-area-inset-bottom));
  display: flex; 
  justify-content: center;
}

.add-inner { 
  width: 100%; 
  max-width: var(--app-max-width); 
  display: flex; 
  gap: var(--space-sm); 
}

.add-input { 
  flex: 1; 
  min-height: var(--size-md); 
  border: 1px solid var(--border); 
  border-radius: var(--radius-full); 
  padding: var(--space-sm) var(--space-md); 
  font-size: 16px; 
  background: var(--card); 
}

/* Better focus indicators */
.add-input:focus,
.add-sub-input:focus {
  outline: none;
  box-shadow: var(--focus);
  border-color: #74c0fc;
}

/* add tasks buttons */
.add-btn,
.add-sub-btn { 
  border: 1px solid var(--border); 
  border-radius: var(--radius-full); 
  display: flex; 
  align-items: center; 
  justify-content: center; 
  background: var(--card); 
  color: var(--muted); 
  box-shadow: var(--shadow); 
  font-weight: 700; 
}

.add-btn { 
  min-height: var(--size-md); 
  min-width: var(--size-md); 
}

.add-sub-btn { 
  min-height: var(--size-xs); 
  min-width: var(--size-xs); 
}

.add-btn:active,
.add-sub-btn:active,
.menu-btn:active { 
  transform: translateY(1px); 
}

/* Inline add-subtask form */
.add-subtask-row { 
  display: flex; 
  gap: var(--space-sm); 
  align-items: center; 
}

.add-sub-input { 
  flex: 1; 
  min-height: var(--size-sm); 
  border: 1px solid var(--border); 
  border-radius: var(--radius-full); 
  padding: var(--space-sm) var(--space-md); 
  font-size: 16px; 
  background: var(--card); 
}

/* Utility Styles */
.drag-layer { 
  position: absolute; 
  inset: 0; 
  pointer-events: none; 
  z-index: var(--radius-full); 
}

.placeholder { 
  border: 1px dashed var(--border); 
  border-radius: var(--radius-sm); 
  background: rgba(0, 0, 0, 0.020);
  margin: 0; 
  padding: 0; 
}

/* Drag Ghost Styles */
.drag-ghost {
  position: absolute; 
  top: 0;
  transform: translate3d(0,0,0);
  width: var(--ghost-w, auto);
  height: var(--ghost-h, auto);
  border-radius: var(--radius-sm);
  opacity: 0.98;
  box-shadow: var(--shadow-strong);
  visibility: hidden;
}

.lock-scroll { /* was body.lock-scroll */
  overflow: hidden; 
  touch-action: none; 
}

/* Empty state */
.empty {
  display: flex; 
  flex-direction: column; 
  align-items: center; 
  gap: var(--space-sm); 
  padding: var(--space-xxl); 
  color: var(--muted); 
  border: 2px dashed var(--border); 
  border-radius: var(--radius);
  background: var(--card);
}

/* Loading and success states */
.task-card.saving {
  opacity: 0.7;
  pointer-events: none;
}

.task-card.success {
  animation: successPulse var(--timing-slow) var(--easing);
}

/* Menu Button */
.menu-btn { 
  appearance: none; 
  border: 1px solid var(--border); 
  background: var(--card); 
  border-radius: var(--radius-full); 
  min-width: var(--size-md); 
  min-height: var(--size-md); 
  display: flex; 
  align-items: center; 
  justify-content: center; 
  font-size: var(--space-md)
  font-weight: 700; 
  box-shadow: var(--shadow); 
}

/* Menu Dropdown */
.menu { 
  position: fixed; 
  top: calc(env(safe-area-inset-top) + var(--space-md) + var(--topbar-h)); 
  left: 50%; 
  display: flex; 
  flex-direction: column; 
  border: 1px solid var(--border); 
  border-radius: var(--radius); 
  gap: var(--space-sm); 
  padding: var(--space-sm); 
  background: white; 
  z-index: var(--z-modal); 
  opacity: 0; 
  transform: translateX(-50%) translateY(-6px) scale(.98);
  pointer-events: none; 
  width: min(260px, calc(100% - 24px));
  transition: opacity var(--timing-fast) ease, transform var(--timing-fast) ease; 
  box-shadow: var(--shadow)
}

.menu.open { 
  opacity: 1; 
  transform: translateX(-50%) translateY(0) scale(1);  /* ‚Üê Keep translateX(-50%) here too! */
  pointer-events: auto; 
}

.menu-item { 
  //display: flex; 
  align-items: center; 
  //gap: var(--space-sm); 
  border: 1px solid var(--border); 
  background: var(--card); 
  border-radius: var(--radius); 
  padding: var(--space-md) var(--space-lg); 
  font-weight: 700; 
  box-shadow: var(--shadow); 
}

.menu-item.danger { 
  color: var(--red); 
  background: #fff5f5; 
  border-color: #ffe3e3; 
}

@keyframes successPulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.02); }
  100% { transform: scale(1); }
}

/* Reduced Motion Support */
@media (prefers-reduced-motion: reduce) {
  .task-card, 
  .task-card.armed, 
  .subtask, 
  .subtask.armed,
  .card-row { 
	transition: none !important; 
	transform: none !important; }
  .swipe-actions .action,
  .card-swipe-actions .action { 
	transition: opacity 60ms linear; }
}

/* Add this to your styles.css - Swipe Gesture Styles */

/* Swipe containers */
.swipe-wrap, .card-swipe-wrap  {
  position: relative;
  border-radius: var(--radius-sm);
}

.card-swipe-wrap {
  overflow: hidden;
}

/* Swipe states */
.swipe-wrap.swiping .subtask, .card-swipe-wrap.swiping .card-row { 
  touch-action: none; 
}

.swipe-wrap.swiping .subtask,
.card-swipe-wrap.swiping .card-row {
  transition: none;
}

.lock-scroll { /*was body.lock-scroll*/
  overflow: hidden; 
  overscroll-behavior: none; 
}

/* Subtask swipe styles
.subtask { 
  will-change: transform; 
  touch-action: pan-y;
  position: relative;
  background: white;
  transition: transform 140ms ease-out, box-shadow 140ms ease-out;
  border-radius: var(--radius-sm, 10px);
  z-index: 1;
}

/* Task card swipe styles */
.card-row {
  will-change: transform;
  touch-action: pan-y;
  position: relative;
  background: white;
  transition: transform var(--timing-fast) ease-out, box-shadow var(--timing-fast) ease-out;
  border-radius: var(--radius);
  z-index: 1;
}

/* Base swipe actions (shared styles) */
.swipe-actions,
.card-swipe-actions { 
  position: absolute; 
  top: 0;
  left: 0;
  right: 0;
  display: grid; 
  grid-template-columns: 1fr 1fr; 
  pointer-events: none;
  background: #f8f9fa;
  overflow: hidden;
  z-index: 0;
}

/* Specific heights and border radius */
.swipe-actions {
  height: var(--subtask-row-height, var(--size-lg));
  border-radius: var(--radius-sm);
}

.card-swipe-actions {
  height: var(--card-row-height, var(--size-xl));
  border-radius: var(--radius) var(--radius) 0 0;
}

/* Action zones */
/* Shared zone styles */
.swipe-actions .zone,
.card-swipe-actions .zone { 
  display: flex; 
  align-items: center; 
  padding: 0 var(--space-lg); 
  gap: var(--space-sm); 
  --reveal: 0; 
  --pulse: 1;
  min-height: inherit;
  transition: background-color var(--timing-normal) ease;
}

/* Shared zone positioning */
.swipe-actions .zone.left,
.card-swipe-actions .zone.left { 
  justify-content: flex-start;
  background: rgba(22, 163, 74, calc(var(--reveal) * 1.0));
}

.swipe-actions .zone.right,
.card-swipe-actions .zone.right { 
  justify-content: flex-end;
  background: rgba(239, 68, 68, calc(var(--reveal) * 1.0));
}

/* Action buttons */
.swipe-actions .action,
.card-swipe-actions .action {
  pointer-events: auto; 
  width: var(--size-sm); 
  height: var(--size-sm);
  min-width: var(--size-sm); 
  min-height: var(--size-sm); 
  border-radius: 50%;
  flex-shrink: 0; 
  font-size: 20px;
  display: inline-flex; 
  align-items: center; 
  justify-content: center;
  background: var(--bg, #e5e7eb); 
  color: var(--fg, #111827);
  box-shadow: 0 2px 8px rgba(0,0,0,.08); 
  border: none; 
  outline: none;
  opacity: var(--reveal);
  transform: scale(calc((0.8 + var(--reveal) * 0.3) * var(--pulse)));
  transition: transform var(--timing-fast) ease, opacity var(--timing-fast) ease;
}

/* Action button variants */
.swipe-actions .action.complete,
.card-swipe-actions .action.complete { 
  --bg: var(--green); 
  --fg: white; 
}

.swipe-actions .action.edit,
.card-swipe-actions .action.edit { 
  --bg: var(--muted); 
  --fg: white; 
}

.swipe-actions .action.delete,
.card-swipe-actions .action.delete { 
  --bg: var(--red); 
  --fg: white; 
}

/* Completed task styling */
.task-card.all-completed .task-title {
  text-decoration: line-through;
  color: var(--muted);
}

.task-card.all-completed .badge {
  background: var(--green);
}

/* Shared hold feedback */
.swipe-wrap.held .swipe-actions .action,
.card-swipe-wrap.held .card-swipe-actions .action {
  box-shadow: 0 0 0 2px rgba(59,130,246,.4), 0 2px 8px rgba(0,0,0,.12);
  transform: scale(calc((0.8 + var(--reveal) * 0.3) * var(--pulse) * 1.05));
}

.swipe-wrap[style*="--hold-feedback"],
.card-swipe-wrap[style*="--hold-feedback"] {
  background: rgba(59,130,246,.05);
  border-radius: var(--radius);
}